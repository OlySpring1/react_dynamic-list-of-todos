{"version":3,"sources":["helpers/api.ts","TodoCard.tsx","TodoList.tsx","ButtonsSort.tsx","App.tsx","index.tsx"],"names":["getTodos","a","fetch","response","json","dataTodos","getUsers","dataUsers","getPrepareTodos","Promise","all","todos","users","prepareTodos","map","todo","userId","find","user","id","TodoCard","title","completed","className","classNames","name","TodoList","key","ButtonsSort","setSortField","type","onClick","App","useState","isToggle","setIsToggle","setTodos","isLoading","setIsLoading","sortField","visibleTodos","sort","b","localeCompare","setTimeout","then","todosFromServe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3c57862.chunk.js","sourcesContent":["const API_URL_TODOS = 'https://jsonplaceholder.typicode.com/todos';\nconst API_URL_USER = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getTodos = async () => {\n  const response = await fetch(API_URL_TODOS);\n  const dataTodos = await response.json();\n\n  return dataTodos;\n};\n\nexport const getUsers = async () => {\n  const response = await fetch(API_URL_USER);\n  const dataUsers = await response.json();\n\n  return dataUsers;\n};\n\nexport const getPrepareTodos = async () => {\n  const [todos, users] = await Promise.all([getTodos(), getUsers()]);\n  const prepareTodos = todos.map((todo: Todo) => ({\n    ...todo,\n    userId: { ...users.find((user: User) => user.id === todo.userId) },\n  }));\n\n  return prepareTodos;\n};\n","import React from 'react';\nimport classNames from 'classnames/bind';\n\ntype Props = {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: User;\n};\n\nconst TodoCard: React.FC<Props> = ({\n  id, title, completed, userId,\n}) => {\n  return (\n    <tr className={\n      classNames({ 'has-background-success': !completed },\n        { 'has-background-info': completed })\n    }\n    >\n      <th>{id}</th>\n      <td>{title}</td>\n      <td>{completed ? 'completed' : 'active'}</td>\n      <td>{userId.name}</td>\n    </tr>\n  );\n};\n\n\nexport default TodoCard;\n","import React from 'react';\nimport TodoCard from './TodoCard';\n\ntype Props = {\n  todos: PrepareTodo[];\n};\n\nconst TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <>\n      {todos.map((todo: PrepareTodo) => (\n        <TodoCard key={todo.id} {...todo} />\n      ))}\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\n\ntype Props = {\n  setSortField: (sortField: string) => void;\n};\n\nconst ButtonsSort: React.FC<Props> = ({ setSortField }) => {\n  return (\n    <tr>\n      <th>\n        <button\n          type=\"button\"\n          className=\"btnSort \"\n          onClick={() => setSortField('id')}\n        >\n          By Id\n        </button>\n      </th>\n\n      <th>\n        <button\n          type=\"button\"\n          className=\"btnSort\"\n          onClick={() => setSortField('title')}\n        >\n          By Title\n        </button>\n      </th>\n\n      <th>\n        <button\n          type=\"button\"\n          className=\"btnSort\"\n          onClick={() => setSortField('completed')}\n        >\n          By Completed\n        </button>\n      </th>\n\n      <th>\n        <button\n          type=\"button\"\n          className=\"btnSort\"\n          onClick={() => setSortField('name')}\n        >\n          By Performer\n        </button>\n      </th>\n    </tr>\n  );\n};\n\nexport default ButtonsSort;\n","import React, { useState } from 'react';\nimport classNames from 'classnames/bind';\nimport { getPrepareTodos } from './helpers/api';\nimport './App.css';\nimport TodoList from './TodoList';\nimport ButtonsSort from './ButtonsSort';\n\nconst App: React.FC = () => {\n  // const [text, setText] = useState('Load');\n  const [isToggle, setIsToggle] = useState(false);\n  const [todos, setTodos] = useState<PrepareTodo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [sortField, setSortField] = useState<string>('id');\n\n  const visibleTodos = [...todos];\n\n  const loadTodos = () => {\n    // !isToggle ? setText('Loading...') : setText('Load');\n\n    setIsToggle(!isToggle);\n\n    setTimeout(() => {\n      getPrepareTodos()\n        .then(todosFromServe => {\n          setTodos(todosFromServe);\n          setIsLoading(true);\n        });\n    }, 1000);\n  };\n\n  switch (sortField) {\n    case 'completed':\n      visibleTodos.sort(\n        (a, b) => +a[sortField] - +b[sortField],\n      );\n      break;\n\n    case 'title':\n      visibleTodos.sort(\n        (a, b) => a[sortField].localeCompare(b[sortField]),\n      );\n      break;\n\n    case 'name':\n      visibleTodos.sort(\n        (a, b) => a.userId[sortField].localeCompare(b.userId[sortField]),\n      );\n      break;\n\n    default:\n      visibleTodos.sort(\n        (a, b) => a.id - b.id,\n      );\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title is-1\">Dynamic list of TODOs</h1>\n      {!isToggle\n        ? (\n          <button\n            type=\"button\"\n            className=\"button is-primary is-medium\"\n            onClick={loadTodos}\n          >\n            Load\n          </button>\n        )\n        : (\n          <div className={classNames({ 'lds-roller': !isLoading }, { 'has-background-success': isLoading })}>\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n            <div />\n          </div>\n        )}\n\n      {isLoading && (\n        <div className=\"bd-snippet-preview \">\n          <table className=\"table is-striped is-hoverable\">\n            <thead className=\"has-background-grey-lighter\">\n              <ButtonsSort setSortField={setSortField} />\n            </thead>\n            <tfoot>\n              <ButtonsSort setSortField={setSortField} />\n            </tfoot>\n            <tbody>\n              <TodoList todos={visibleTodos} />\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}